/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mr.reviews.fsstruct.avro.model;  
@SuppressWarnings("all")
public class ReviewAvroV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReviewAvroV2\",\"namespace\":\"mr.reviews.fsstruct.avro.model\",\"fields\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"venueName\",\"type\":\"string\",\"default\":\"not provided\"}]}");
  @Deprecated public java.lang.CharSequence user;
  @Deprecated public java.lang.CharSequence text;
  @Deprecated public long timestamp;
  @Deprecated public java.lang.CharSequence venueName;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user;
    case 1: return text;
    case 2: return timestamp;
    case 3: return venueName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user = (java.lang.CharSequence)value$; break;
    case 1: text = (java.lang.CharSequence)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: venueName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user' field.
   */
  public java.lang.CharSequence getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(java.lang.CharSequence value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'text' field.
   */
  public java.lang.CharSequence getText() {
    return text;
  }

  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(java.lang.CharSequence value) {
    this.text = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'venueName' field.
   */
  public java.lang.CharSequence getVenueName() {
    return venueName;
  }

  /**
   * Sets the value of the 'venueName' field.
   * @param value the value to set.
   */
  public void setVenueName(java.lang.CharSequence value) {
    this.venueName = value;
  }

  /** Creates a new ReviewAvroV2 RecordBuilder */
  public static mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder newBuilder() {
    return new mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder();
  }
  
  /** Creates a new ReviewAvroV2 RecordBuilder by copying an existing Builder */
  public static mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder newBuilder(mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder other) {
    return new mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder(other);
  }
  
  /** Creates a new ReviewAvroV2 RecordBuilder by copying an existing ReviewAvroV2 instance */
  public static mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder newBuilder(mr.reviews.fsstruct.avro.model.ReviewAvroV2 other) {
    return new mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder(other);
  }
  
  /**
   * RecordBuilder for ReviewAvroV2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReviewAvroV2>
    implements org.apache.avro.data.RecordBuilder<ReviewAvroV2> {

    private java.lang.CharSequence user;
    private java.lang.CharSequence text;
    private long timestamp;
    private java.lang.CharSequence venueName;

    /** Creates a new Builder */
    private Builder() {
      super(mr.reviews.fsstruct.avro.model.ReviewAvroV2.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing ReviewAvroV2 instance */
    private Builder(mr.reviews.fsstruct.avro.model.ReviewAvroV2 other) {
            super(mr.reviews.fsstruct.avro.model.ReviewAvroV2.SCHEMA$);
      if (isValidValue(fields()[0], other.user)) {
        this.user = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.text)) {
        this.text = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.text);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = (java.lang.Long) data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.venueName)) {
        this.venueName = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.venueName);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'user' field */
    public java.lang.CharSequence getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder setUser(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'user' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder clearUser() {
      user = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'text' field */
    public java.lang.CharSequence getText() {
      return text;
    }
    
    /** Sets the value of the 'text' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder setText(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.text = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'text' field has been set */
    public boolean hasText() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'text' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder clearText() {
      text = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timestamp' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'venueName' field */
    public java.lang.CharSequence getVenueName() {
      return venueName;
    }
    
    /** Sets the value of the 'venueName' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder setVenueName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.venueName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'venueName' field has been set */
    public boolean hasVenueName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'venueName' field */
    public mr.reviews.fsstruct.avro.model.ReviewAvroV2.Builder clearVenueName() {
      venueName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ReviewAvroV2 build() {
      try {
        ReviewAvroV2 record = new ReviewAvroV2();
        record.user = fieldSetFlags()[0] ? this.user : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.text = fieldSetFlags()[1] ? this.text : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.venueName = fieldSetFlags()[3] ? this.venueName : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
